{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-84b6d196\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"center\"\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"tasks\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Tasks\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"p\", null, \"Total Task: \" + _toDisplayString($options.totalTask), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => task.completed = $event\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vModelCheckbox, task.completed]]), _createCommentVNode(\" Checkbox added \"), _createElementVNode(\"label\", null, _toDisplayString(task.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$options","totalTask","_Fragment","_renderList","$data","tasks","task","index","key","type","$event","completed","_hoisted_5","_createCommentVNode","name"],"sources":["C:\\Users\\USER\\Documents\\ITEW6\\Case-Study\\src\\components\\Task.vue"],"sourcesContent":["<template>\r\n  <div class=\"center\">\r\n    <div class=\"card\">\r\n      <div class=\"tasks\">\r\n        <h2>Tasks</h2>\r\n        <p>Total Task: {{ totalTask }}</p>\r\n        <ul>\r\n          <li v-for=\"(task, index) in tasks\" :key=\"index\">\r\n            <input type=\"checkbox\" v-model=\"task.completed\"> <!-- Checkbox added -->\r\n            <label>{{ task.name }}</label>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      tasks: this.$tasks\r\n    };\r\n  },\r\n  computed: {\r\n    totalTask() {\r\n      return this.tasks.length;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.card {\r\n  background-color: #ffffff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\n.tasks {\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n\r\n.tasks ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n.tasks li {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* Style for the checkbox */\r\n.tasks li input[type=\"checkbox\"] {\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAAc,YAAV,OAAK;mBAJjB;;uBACEC,mBAAA,CAaM,OAbNC,UAaM,GAZJF,mBAAA,CAWM,OAXNG,UAWM,GAVJH,mBAAA,CASM,OATNI,UASM,GARJC,UAAc,EACdL,mBAAA,CAAkC,WAA/B,cAAY,GAAAM,gBAAA,CAAGC,QAAA,CAAAC,SAAS,kBAC3BR,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKQ,SAAA,QAVfC,WAAA,CAOsCC,KAAA,CAAAC,KAAK,EAP3C,CAOsBC,IAAI,EAAEC,KAAK;yBAAvBb,mBAAA,CAGK;MAH+Bc,GAAG,EAAED;IAAK,I,gBAC5Cd,mBAAA,CAAgD;MAAzCgB,IAAI,EAAC,UAAU;MARlC,uBAAAC,MAAA,IAQ4CJ,IAAI,CAACK,SAAS,GAAAD;4BAR1DE,UAAA,I,kBAQ4CN,IAAI,CAACK,SAAS,E,GAAGE,mBAAA,oBAAuB,EACxEpB,mBAAA,CAA8B,eAAAM,gBAAA,CAApBO,IAAI,CAACQ,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}